#include <avr/io.h>
#include <stdio.h>


int main(void)
{
	unsigned char A,B,C,D,E,F0,F1,F2; 
	DDRA = 0xFF;               /* PA00,PA01,PA02 as output */
	DDRC = 0x00;               /* PC0,PC1,PC2,PC3,PC4 as input  */ 
	PORTA = 0x00;
	while (1) 
	{
		A = PINC & 0x01;      /* we take each of the 5 LSBs of PIND by applying masks */
		B = PINC & 0x02;
		B = B >> 1;
		C = PINC & 0x04;
		C = C >> 2;
		D = PINC & 0x08;
	        D = D >> 3;	
		E = PINC & 0x10;	
		E = E >> 4;
		F0 = ~ ( (A&B) | (B&C) | (C&D) | (D&E) );
		F0 = F0 & 0x01;
		F1 = ((A & B & C & D) | ((~D) & (~E)) );
		F1 = F1 & 0x01;
		F2 = F0 | F1; 
		F1 = F1 << 1;
		F2 = F2 << 2;	
		F1= F1 | F2 | F0;
		PORTA = F1;	
	}
	return 0;
} 
 