.include "m16def.inc"

.dseg
_tmp_: .byte 2
.def temp = r18
.cseg

start:
	ldi r24, low(RAMEND)																		
	out SPL, r24
	ldi r24, high(RAMEND)
	out SPH, r24

	ldi r24, (1 << PC7) | (1 << PC6) | (1 << PC5) | (1 << PC4)									; set 4 MSBs as output
	out DDRC, r24																				; in PORTC
	
	ldi r24, (1 << PD7) | (1 << PD6) | (1 << PD5) | (1 << PD4) | (1 << PD3) | (1 << PD2)		; set 6 MSBs as output
	out DDRD, r24														
							; in PORTD

	call lcd_init																				; initialize lcd screen with "NONE"
	ldi r24,'N'
	call lcd_data
	ldi r24,'O'
	call lcd_data
	ldi r24,'N'	
	call lcd_data
	ldi r24,'E'
	call lcd_data

loop:
	ldi r24, 20						; set 20ms bouncing delay
	call scan_keypad_rising_edge	; read keyboard
	call keypad_to_ascii
	cpi r24, 0						; if no buttons are pressed, read again
	breq loop
	mov temp, r24					; temp has the number that was pressed

	ldi r24, 0x02					; clear screen
	rcall lcd_command

	mov r24, temp					
	call lcd_data					; print number to the screen
	ldi r24,' '
	call lcd_data
	ldi r24,' '
	call lcd_data
	ldi r24,' '
	call lcd_data
	jmp loop


wait_usec:
	sbiw r24 ,1					; 2 eyeeie (0.250 isec)
	nop							; 1 eyeeio (0.125 isec)
	nop							; 1 eyeeio (0.125 isec)
	nop							; 1 eyeeio (0.125 isec)
	nop							; 1 eyeeio (0.125 isec)
	brne wait_usec				; 1 ? 2 eyeeie (0.125 ? 0.250 isec)
	ret							; 4 eyeeie (0.500 isec)

wait_msec:
	push r24					; 2 eyeeie (0.250 isec)
	push r25					; 2 eyeeie
	ldi r24 , low(998)			; ounouoa oii eaoa?. r25:r24 ia 998 (1 eyeeio - 0.125 isec)
	ldi r25 , high(998)			; 1 eyeeio (0.125 isec)
	rcall wait_usec				; 3 eyeeie (0.375 isec), ?nieaea? ooiieeeU eaeoooYncoc 998.375 isec
	pop r25						; 2 eyeeie (0.250 isec)
	pop r24						; 2 eyeeie
	sbiw r24 , 1				; 2 eyeeie
	brne wait_msec				; 1 ? 2 eyeeie (0.125 ? 0.250 isec)
	ret							; 4 eyeeie (0.500 isec)

scan_row:
	ldi r25 ,0x08				; an?eei?i?coc ia ‘0000 1000’
back_:
	lsl r25						; aneooan? ie?oecoc oio ‘1’ ouoao eYoaeo
	dec r24						; uoio a?iae i aneeiuo oco anaii?o
	brne back_
	out PORTC ,r25				; c aio?ooie?c anaii? o?eaoae ooi eiaeeu ‘1’
	nop
	nop							; eaeoooYncoc aea ia ?nieUaae ia a?iae c aeeaa? eaoUooaoco
	in r24 ,PINC				; a?eoonYoioi ie eYoaeo (oo?eao) oui aeaei?o?i ?io a?iae ?eaoiYiie
	andi r24 ,0x0f				; a?iiii?iiioae oa 4 LSB u?io oa ‘1’ aa??iioi ?io a?iae ?aociYiie
	ret							; ie aeaeu?oao.

scan_keypad:
	ldi r24 ,0x01				; Yeaaia oci ?n?oc anaii? oio ?eceonieia?io
	rcall scan_row
	swap r24					; a?ie?eaooa oi a?ioYeaoia
	mov r27 ,r24				; ooa 4 msb oio r27
	ldi r24 ,0x02				; Yeaaia oc aayoanc anaii? oio ?eceonieia?io
	rcall scan_row
	add r27 ,r24				; a?ie?eaooa oi a?ioYeaoia ooa 4 lsb oio r27
	ldi r24 ,0x03				; Yeaaia oci on?oc anaii? oio ?eceonieia?io
	rcall scan_row
	swap r24					; a?ie?eaooa oi a?ioYeaoia
	mov r26 ,r24				; ooa 4 msb oio r26
	ldi r24 ,0x04				; Yeaaia oci oYoanoc anaii? oio ?eceonieia?io
	rcall scan_row
	add r26 ,r24				; a?ie?eaooa oi a?ioYeaoia ooa 4 lsb oio r26
	movw r24 ,r26				; iaoYoana oi a?ioYeaoia ooioo eaoa?uncoYo r25:r24
	ret

scan_keypad_rising_edge:
	mov r22 ,r24				; a?ie?eaooa oi ?nuii o?eiecneoiiy ooii r22
	rcall scan_keypad			; Yeaaia oi ?eceonieuaei aea ?eaoiYiioo aeaeu?oao
	push r24					; eae a?ie?eaooa oi a?ioYeaoia
	push r25
	mov r24 ,r22				; eaeoooYncoa r22 ms (oo?eeYo oeiYo 10-20 msec ?io eaein??aoae a?u oii
	ldi r25 ,0					; eaoaoeaoaoo? oio ?eceonieia?io – ?niiiaeUneaea o?eiecneoi?i)
	rcall wait_msec
	rcall scan_keypad			; Yeaaia oi ?eceonieuaei iaiU eae a?unneoa
	pop r23						; uoa ?e?eona aioai??ioi o?eiecneoiu
	pop r22
	and r24 ,r22
	and r25 ,r23
	ldi r26 ,low(_tmp_)			; ounouoa oci eaoUooaoc oui aeaei?o?i ooci
	ldi r27 ,high(_tmp_)		; ?nicaiyiaic ee?oc oco nioo?iao ooioo r27:r26
	ld r23 ,X+
	ld r22 ,X
	st X ,r24					; a?ie?eaooa ooc RAM oc iYa eaoUooaoc
	st -X ,r25					; oui aeaei?o?i
	com r23
	com r22						; anao oioo aeaeu?oao ?io Y?ioi «iueeo» ?aocea?
	and r24 ,r22
	and r25 ,r23
	ret

keypad_to_ascii:				; eiaeeu ‘1’ ooeo eYoaeo oio eaoa?unco? r26 ace?iioi
	movw r26 ,r24				; oa ?anaeUou oyiaiea eae aneeiiyo
	ldi r24 ,'*'
	sbrc r26 ,0
	ret
	ldi r24 ,'0'
	sbrc r26 ,1
	ret
	ldi r24 ,'#'
	sbrc r26 ,2
	ret
	ldi r24 ,'D'
	sbrc r26 ,3					; ai aai a?iae ‘1’?anaeUi?oae oci ret, aeee?o (ai a?iae ‘1’)
	ret							; a?eoonYoae ia oii eaoa?unco? r24 oci ASCII oei? oio D.
	ldi r24 ,'7'
	sbrc r26 ,4
	ret
	ldi r24 ,'8'
	sbrc r26 ,5
	ret
	ldi r24 ,'9'
	sbrc r26 ,6
	ret
	ldi r24 ,'C'
	sbrc r26 ,7
	ret
	ldi r24 ,'4'				; eiaeeu ‘1’ ooeo eYoaeo oio eaoa?unco? r27 ace?iioi
	sbrc r27 ,0					; oa ?anaeUou oyiaiea eae aneeiiyo
	ret
	ldi r24 ,'5'
	sbrc r27 ,1
	ret
	ldi r24 ,'6'
	sbrc r27 ,2
	ret
	ldi r24 ,'B'
	sbrc r27 ,3
	ret
	ldi r24 ,'1'
	sbrc r27 ,4
	ret
	ldi r24 ,'2'	
	sbrc r27 ,5
	ret
	ldi r24 ,'3'
	sbrc r27 ,6
	ret
	ldi r24 ,'A'
	sbrc r27 ,7
	ret
	clr r24
	ret

write_2_nibbles:
	push r24					; ooYeiae oa 4 MSB
	in r25 ,PIND				; aeaaU?iioae oa 4 LSB eae oa iaiaooYeiioia
	andi r25 ,0x0f				; aea ia ici ?aeUoioia oci u?iea ?nicaiyiaic eaoUooaoc
	andi r24 ,0xf0				; a?iiii?iiioae oa 4 MSB eae
	add r24 ,r25				; ooiaoU?iioae ia oa ?niu?Un?iioa 4 LSB
	out PORTD ,r24				; eae a?iiioae ooci Yiiai
	sbi PORTD ,PD3				; acieionaa?oae ?aeiuo Enable ooii aeniaYeoc PD3
	cbi PORTD ,PD3				; PD3=1 eae iaoU PD3=0
	pop r24						; ooYeiae oa 4 LSB. AiaeoUoae oi byte.
	swap r24					; aiaeeUooiioae oa 4 MSB ia oa 4 LSB
	andi r24 ,0xf0				; ?io ia oci oaenU oioo a?iooYeeiioae
	add r24 ,r25
	out PORTD ,r24
	sbi PORTD ,PD3				; IYio ?aeiuo Enable
	cbi PORTD ,PD3
	ret

lcd_data:
	sbi PORTD ,PD2				; a?eeia? oio eaoa?un?oc aaaiiYiui (PD2=1)
	rcall write_2_nibbles		; a?iooie? oio byte
	ldi r24 ,43					; aiaiii? 43isec iY?ne ia ieieecnuea? c e?oc
	ldi r25 ,0					; oui aaaiiYiui a?u oii aeaaeo? oco lcd
	rcall wait_usec
	ret

lcd_command:
	cbi PORTD ,PD2				; a?eeia? oio eaoa?unco? aioie?i (PD2=1)
	rcall write_2_nibbles		; a?iooie? oco aioie?o eae aiaiii? 39isec
	ldi r24 ,39					; aea oci ieiee?nuoc oco aeoYeaoco oco a?u oii aeaaeo? oco lcd.
	ldi r25 ,0					; OCI.: o?Un?ioi ayi aioieYo, ie clear display eae return home,
	rcall wait_usec				; ?io a?aeoiyi ociaioeeU iaaaeyoani ?niieeu aeUoocia.
	ret

lcd_init:
	ldi r24 ,40					; ?oai i aeaaeo?o oco lcd onioiaioa?oae ia
	ldi r25 ,0					; nayia aeoaea? oci aee? oio an?eei?i?coc.
	rcall wait_msec				; Aiaiii? 40 msec iY?ne aoo? ia ieieecnuea?.
	ldi r24 ,0x30				; aioie? iaoUaaoco oa 8 bit mode
	out PORTD ,r24				; a?aea? aai i?iniyia ia a?iaooa aYaaeie
	sbi PORTD ,PD3				; aea oc aeaiunouoc aeouaio oio aeaaeo?
	cbi PORTD ,PD3				; oco ieuico, c aioie? a?iooYeeaoae ayi oinYo
	ldi r24 ,39
	ldi r25 ,0					; aUi i aeaaeo?o oco ieuico an?oeaoae oa 8-bit mode
	rcall wait_usec				; aai ea ooiaa? o??ioa, aeeU ai i aeaaeo?o Y?ae aeaiunouoc
								; aeouaio 4 bit ea iaoaaa? oa aeaiunouoc 8 bit
	ldi r24 ,0x30	
	out PORTD ,r24
	sbi PORTD ,PD3
	cbi PORTD ,PD3
	ldi r24 ,39
	ldi r25 ,0
	rcall wait_usec
	ldi r24 ,0x20				; aeeaa? oa 4-bit mode
	out PORTD ,r24
	sbi PORTD ,PD3
	cbi PORTD ,PD3
	ldi r24 ,39
	ldi r25 ,0
	rcall wait_usec
	ldi r24 ,0x28				; a?eeia? ?anaeo?nui iaaYeioo 5x8 eioe?aui
	rcall lcd_command			; eae aioUieoc ayi anaii?i ooci ieuic
	ldi r24 ,0x0c				; aianai?i?coc oco ieuico, a?uenooc oio eYnoina
	rcall lcd_command
	ldi r24 ,0x01				; eaeaneoiuo oco ieuico
	rcall lcd_command
	ldi r24 ,low(1530)
	ldi r25 ,high(1530)
	rcall wait_usec
	ldi r24 ,0x06				; aianai?i?coc aoouiaoco ayicoco eaoU 1 oco aeayeoioco
	rcall lcd_command			; ?io a?iae a?ieceaoiYic ooii iaonco? aeaoeyioaui eae
								; a?aianai?i?coc oco ie?oecoco ieueecnco oco ieuico
	ret
